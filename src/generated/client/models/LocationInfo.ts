/* tslint:disable */
/* eslint-disable */
/**
 * CityLoops API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Coordinates,
    CoordinatesFromJSON,
    CoordinatesFromJSONTyped,
    CoordinatesToJSON,
} from './';

/**
 * Location info object
 * @export
 * @interface LocationInfo
 */
export interface LocationInfo {
    /**
     * 
     * @type {Coordinates}
     * @memberof LocationInfo
     */
    coordinates?: Coordinates;
    /**
     * Location description
     * @type {string}
     * @memberof LocationInfo
     */
    description?: string;
    /**
     * Phone number
     * @type {string}
     * @memberof LocationInfo
     */
    phone?: string;
    /**
     * Email
     * @type {string}
     * @memberof LocationInfo
     */
    email?: string;
    /**
     * Address
     * @type {string}
     * @memberof LocationInfo
     */
    address?: string;
}

export function LocationInfoFromJSON(json: any): LocationInfo {
    return LocationInfoFromJSONTyped(json, false);
}

export function LocationInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'coordinates': !exists(json, 'coordinates') ? undefined : CoordinatesFromJSON(json['coordinates']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'address': !exists(json, 'address') ? undefined : json['address'],
    };
}

export function LocationInfoToJSON(value?: LocationInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'coordinates': CoordinatesToJSON(value.coordinates),
        'description': value.description,
        'phone': value.phone,
        'email': value.email,
        'address': value.address,
    };
}
