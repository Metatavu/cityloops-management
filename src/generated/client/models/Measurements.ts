/* tslint:disable */
/* eslint-disable */
/**
 * CityLoops API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Item measurements
 * @export
 * @interface Measurements
 */
export interface Measurements {
    /**
     * Item height
     * @type {number}
     * @memberof Measurements
     */
    height?: number;
    /**
     * Item width
     * @type {number}
     * @memberof Measurements
     */
    width?: number;
    /**
     * Item depth
     * @type {number}
     * @memberof Measurements
     */
    depth?: number;
    /**
     * Measurement unit
     * @type {string}
     * @memberof Measurements
     */
    unit?: string;
}

export function MeasurementsFromJSON(json: any): Measurements {
    return MeasurementsFromJSONTyped(json, false);
}

export function MeasurementsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Measurements {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'height': !exists(json, 'height') ? undefined : json['height'],
        'width': !exists(json, 'width') ? undefined : json['width'],
        'depth': !exists(json, 'depth') ? undefined : json['depth'],
        'unit': !exists(json, 'unit') ? undefined : json['unit'],
    };
}

export function MeasurementsToJSON(value?: Measurements | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'height': value.height,
        'width': value.width,
        'depth': value.depth,
        'unit': value.unit,
    };
}


